{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joel/Code/joelhooks/cueplayer-react/src/components/player.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport Hls from 'hls.js';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CAPTION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentCaption: action.text\n      });\n\n    case 'TIME_CHANGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentTime: action.currentTime\n      });\n\n    case 'PLAYER_UPDATE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        player: action.player\n      });\n\n    case 'SET_DURATION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        duration: action.duration\n      });\n  }\n};\n\nexport const usePlayerStore = create(devtools(set => ({\n  player: null,\n  currentTime: 0,\n  duration: 0,\n  currentCaption: ' ',\n  dispatch: args => set(state => reducer(state, args))\n})));\nexport const useVideo = videoOptions => {\n  const videoNode = React.useRef();\n  const [ready, setReady] = React.useState(false);\n  const changedKey = JSON.stringify(videoOptions);\n  const dispatch = usePlayerStore(React.useCallback(state => state.dispatch, []));\n  const onPlayerProgress = React.useCallback(e => {\n    const player = e.target;\n    dispatch({\n      type: 'TIME_CHANGE',\n      currentTime: player.currentTime\n    });\n  }, [dispatch]);\n  React.useEffect(() => {\n    const player = videoNode.current;\n    const hlsConfig = {\n      enableWorker: true\n    };\n\n    function initPlayer(video) {\n      const hls = new Hls(_objectSpread({}, hlsConfig));\n      hls.attachMedia(video);\n      hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(videoOptions.url);\n        hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {\n          console.log('manifest loaded, found ' + data.levels.length + ' quality level', data.levels);\n          setReady(true);\n        });\n      });\n      hls.on(Hls.Events.ERROR, function (event, data) {\n        if (data.fatal) {\n          switch (data.type) {\n            case Hls.ErrorTypes.NETWORK_ERROR:\n              hls.startLoad();\n              break;\n\n            case Hls.ErrorTypes.MEDIA_ERROR:\n              hls.recoverMediaError();\n              break;\n\n            default:\n              initPlayer(video);\n              break;\n          }\n        }\n      });\n      return hls;\n    }\n\n    function onDurationChange() {\n      dispatch({\n        type: 'SET_DURATION',\n        duration: (player === null || player === void 0 ? void 0 : player.duration) || 0\n      });\n    }\n\n    function onMetadataLoaded() {\n      const textTracks = player === null || player === void 0 ? void 0 : player.textTracks[0];\n      console.log(player === null || player === void 0 ? void 0 : player.textTracks);\n      player === null || player === void 0 ? void 0 : player.textTracks.forEach(track => {});\n      textTracks.mode = 'hidden';\n      const cues = textTracks.cues;\n\n      for (let index = 0; index < cues.length; index++) {\n        var cue = cues[index];\n\n        cue.onenter = e => {\n          const cue = e.target;\n          console.log(cue);\n          dispatch({\n            type: 'SET_CAPTION',\n            text: cue.text\n          });\n        }; // cue.onexit = cueExit\n\n      }\n    }\n\n    function addEventListeners() {\n      player === null || player === void 0 ? void 0 : player.addEventListener('timeupdate', onPlayerProgress);\n      player === null || player === void 0 ? void 0 : player.addEventListener('durationchange', onDurationChange);\n      player === null || player === void 0 ? void 0 : player.addEventListener('loadedmetadata', onMetadataLoaded);\n    }\n\n    function removeEventListeners() {\n      player === null || player === void 0 ? void 0 : player.removeEventListener('timeupdate', onPlayerProgress);\n      player === null || player === void 0 ? void 0 : player.removeEventListener('durationchange', onDurationChange);\n      player === null || player === void 0 ? void 0 : player.removeEventListener('loadedmetadata', onMetadataLoaded);\n    }\n\n    if (Hls.isSupported()) {\n      const hls = player && initPlayer(player);\n      dispatch({\n        type: 'PLAYER_UPDATE',\n        player\n      });\n      addEventListeners();\n      return () => {\n        if (hls != null) {\n          hls.destroy();\n        }\n\n        removeEventListeners();\n      };\n    } else if (player !== null && player !== void 0 && player.canPlayType('application/vnd.apple.mpegurl')) {\n      // we have to branch on ios because it plays hls natively\n      // and requires a different approach ðŸ˜­\n      player.src = videoOptions.url;\n      setReady(true);\n      addEventListeners();\n      return () => {\n        removeEventListeners();\n      };\n    }\n  }, [videoOptions, videoNode, dispatch, onPlayerProgress]);\n  const Video = React.useCallback((_ref) => {\n    let {\n      children\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(\"video\", _objectSpread(_objectSpread({\n      ref: videoNode,\n      crossOrigin: \"anonymous\"\n    }, props), {}, {\n      children: children\n    }), changedKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this);\n  }, [changedKey]);\n  return {\n    Video,\n    ready,\n    player: videoNode.current\n  };\n};","map":{"version":3,"sources":["/Users/joel/Code/joelhooks/cueplayer-react/src/components/player.tsx"],"names":["React","Hls","create","devtools","reducer","state","action","type","currentCaption","text","currentTime","player","duration","usePlayerStore","set","dispatch","args","useVideo","videoOptions","videoNode","useRef","ready","setReady","useState","changedKey","JSON","stringify","useCallback","onPlayerProgress","e","target","useEffect","current","hlsConfig","enableWorker","initPlayer","video","hls","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","url","MANIFEST_PARSED","event","data","console","log","levels","length","ERROR","fatal","ErrorTypes","NETWORK_ERROR","startLoad","MEDIA_ERROR","recoverMediaError","onDurationChange","onMetadataLoaded","textTracks","forEach","track","mode","cues","index","cue","onenter","addEventListeners","addEventListener","removeEventListeners","removeEventListener","isSupported","destroy","canPlayType","src","Video","children","props"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport Hls from 'hls.js'\nimport create from 'zustand'\nimport {devtools} from 'zustand/middleware'\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case 'SET_CAPTION':\n      return {...state, currentCaption: action.text}\n    case 'TIME_CHANGE':\n      return {...state, currentTime: action.currentTime}\n    case 'PLAYER_UPDATE':\n      return {...state, player: action.player}\n    case 'SET_DURATION':\n      return {...state, duration: action.duration}\n  }\n}\n\nexport const usePlayerStore = create(\n  devtools((set) => ({\n    player: null,\n    currentTime: 0,\n    duration: 0,\n    currentCaption: ' ',\n    dispatch: (args: any) => set((state: any) => reducer(state, args)),\n  })),\n)\n\nexport const useVideo = (videoOptions: any) => {\n  const videoNode = React.useRef<HTMLMediaElement>()\n  const [ready, setReady] = React.useState(false)\n  const changedKey = JSON.stringify(videoOptions)\n\n  const dispatch: any = usePlayerStore(\n    React.useCallback((state) => state.dispatch, []),\n  )\n\n  const onPlayerProgress = React.useCallback(\n    (e: any) => {\n      const player = e.target as HTMLMediaElement\n      dispatch({type: 'TIME_CHANGE', currentTime: player.currentTime})\n    },\n    [dispatch],\n  )\n\n  React.useEffect(() => {\n    const player = videoNode.current\n    const hlsConfig = {enableWorker: true}\n\n    function initPlayer(video: HTMLMediaElement) {\n      const hls = new Hls({\n        ...hlsConfig,\n      })\n\n      hls.attachMedia(video)\n      hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(videoOptions.url)\n        hls.on(Hls.Events.MANIFEST_PARSED, function (event:any, data:any) {\n          console.log(\n            'manifest loaded, found ' + data.levels.length + ' quality level',\n            data.levels,\n          )\n\n          setReady(true)\n        })\n      })\n\n      hls.on(Hls.Events.ERROR, function (event:any, data:any) {\n        if (data.fatal) {\n          switch (data.type) {\n            case Hls.ErrorTypes.NETWORK_ERROR:\n              hls.startLoad()\n              break\n            case Hls.ErrorTypes.MEDIA_ERROR:\n              hls.recoverMediaError()\n              break\n            default:\n              initPlayer(video)\n              break\n          }\n        }\n      })\n\n      return hls\n    }\n\n    function onDurationChange() {\n      dispatch({type: 'SET_DURATION', duration: player?.duration || 0})\n    }\n\n    function onMetadataLoaded() {\n      const textTracks: any = player?.textTracks[0]\n\n      console.log(player?.textTracks)\n\n      player?.textTracks.forEach((track) => {\n\n      })\n\n      textTracks.mode = 'hidden'\n      const cues = textTracks.cues\n\n      for (let index = 0; index < cues.length; index++) {\n        var cue = cues[index]\n        cue.onenter = (e: any) => {\n          const cue = e.target\n          console.log(cue)\n          dispatch({type: 'SET_CAPTION', text: cue.text})\n        }\n        // cue.onexit = cueExit\n      }\n    }\n\n    function addEventListeners() {\n      player?.addEventListener('timeupdate', onPlayerProgress)\n      player?.addEventListener('durationchange', onDurationChange)\n      player?.addEventListener('loadedmetadata', onMetadataLoaded)\n    }\n\n    function removeEventListeners() {\n      player?.removeEventListener('timeupdate', onPlayerProgress)\n      player?.removeEventListener('durationchange', onDurationChange)\n      player?.removeEventListener('loadedmetadata', onMetadataLoaded)\n    }\n\n    if (Hls.isSupported()) {\n      const hls = player && initPlayer(player)\n      dispatch({type: 'PLAYER_UPDATE', player})\n      addEventListeners()\n\n      return () => {\n        if (hls != null) {\n          hls.destroy()\n        }\n        removeEventListeners()\n      }\n    } else if (player?.canPlayType('application/vnd.apple.mpegurl')) {\n      // we have to branch on ios because it plays hls natively\n      // and requires a different approach ðŸ˜­\n      player.src = videoOptions.url\n      setReady(true)\n      addEventListeners()\n\n      return () => {\n        removeEventListeners()\n      }\n    }\n  }, [videoOptions, videoNode, dispatch, onPlayerProgress])\n\n  const Video = React.useCallback(\n    ({children, ...props}) => {\n      return (\n        <video\n          key={changedKey}\n          ref={videoNode}\n          crossOrigin=\"anonymous\"\n          {...props}\n        >\n          {children}\n        </video>\n      )\n    },\n    [changedKey],\n  )\n  return {Video, ready, player: videoNode.current}\n}\n"]},"metadata":{},"sourceType":"module"}