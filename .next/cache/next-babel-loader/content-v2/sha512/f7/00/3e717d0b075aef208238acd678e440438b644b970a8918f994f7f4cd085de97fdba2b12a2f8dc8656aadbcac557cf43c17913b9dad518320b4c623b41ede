{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/joel/Code/joelhooks/cueplayer-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/joel/Code/joelhooks/cueplayer-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/joel/Code/joelhooks/cueplayer-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/joel/Code/joelhooks/cueplayer-react/src/components/player.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Hls from 'hls.js';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'SET_CAPTION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentCaption: action.text\n      });\n\n    case 'TIME_CHANGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentTime: action.currentTime\n      });\n\n    case 'PLAYER_UPDATE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        player: action.player\n      });\n\n    case 'SET_DURATION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        duration: action.duration\n      });\n  }\n};\n\nexport var usePlayerStore = create(devtools(function (set) {\n  return {\n    player: null,\n    currentTime: 0,\n    duration: 0,\n    currentCaption: ' ',\n    dispatch: function dispatch(args) {\n      return set(function (state) {\n        return reducer(state, args);\n      });\n    }\n  };\n}));\nexport var useVideo = function useVideo(videoOptions) {\n  _s();\n\n  var videoNode = React.useRef();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      ready = _React$useState2[0],\n      setReady = _React$useState2[1];\n\n  var changedKey = JSON.stringify(videoOptions);\n  var dispatch = usePlayerStore(React.useCallback(function (state) {\n    return state.dispatch;\n  }, []));\n  var onPlayerProgress = React.useCallback(function (e) {\n    var player = e.target;\n    dispatch({\n      type: 'TIME_CHANGE',\n      currentTime: player.currentTime\n    });\n  }, [dispatch]);\n  React.useEffect(function () {\n    var player = videoNode.current;\n    var hlsConfig = {\n      enableWorker: true\n    };\n\n    function initPlayer(video) {\n      var hls = new Hls(_objectSpread({}, hlsConfig));\n      hls.attachMedia(video);\n      hls.on(Hls.Events.MEDIA_ATTACHED, function () {\n        hls.loadSource(videoOptions.url);\n        hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {\n          console.log('manifest loaded, found ' + data.levels.length + ' quality level', data.levels);\n          setReady(true);\n        });\n      });\n      hls.on(Hls.Events.ERROR, function (event, data) {\n        if (data.fatal) {\n          switch (data.type) {\n            case Hls.ErrorTypes.NETWORK_ERROR:\n              hls.startLoad();\n              break;\n\n            case Hls.ErrorTypes.MEDIA_ERROR:\n              hls.recoverMediaError();\n              break;\n\n            default:\n              initPlayer(video);\n              break;\n          }\n        }\n      });\n      return hls;\n    }\n\n    function onDurationChange() {\n      dispatch({\n        type: 'SET_DURATION',\n        duration: (player === null || player === void 0 ? void 0 : player.duration) || 0\n      });\n    }\n\n    function onMetadataLoaded() {\n      console.log('METADATA LOADED');\n      console.log(player.textTracks);\n      var tracks = player.textTracks;\n\n      for (var i = 0, L = tracks.length; i < L; i++) {\n        var textTrack = tracks[i];\n        console.log(textTrack);\n\n        if (textTrack.kind === 'subtitles') {\n          var cues = textTrack.cues;\n\n          for (var index = 0; index < cues.length; index++) {\n            var cue = cues[index];\n            console.log(cue);\n\n            cue.onenter = function (e) {\n              var cue = e.target;\n              console.log(cue);\n              dispatch({\n                type: 'SET_CAPTION',\n                text: cue.text\n              });\n            }; // cue.onexit = cueExit\n\n          }\n\n          textTrack.mode = 'showing';\n        }\n      }\n    }\n\n    function addEventListeners() {\n      player === null || player === void 0 ? void 0 : player.addEventListener('timeupdate', onPlayerProgress);\n      player === null || player === void 0 ? void 0 : player.addEventListener('durationchange', onDurationChange);\n      player === null || player === void 0 ? void 0 : player.addEventListener('loadedmetadata', onMetadataLoaded);\n    }\n\n    function removeEventListeners() {\n      player === null || player === void 0 ? void 0 : player.removeEventListener('timeupdate', onPlayerProgress);\n      player === null || player === void 0 ? void 0 : player.removeEventListener('durationchange', onDurationChange);\n      player === null || player === void 0 ? void 0 : player.removeEventListener('loadedmetadata', onMetadataLoaded);\n    }\n\n    if (Hls.isSupported()) {\n      var hls = player && initPlayer(player);\n      dispatch({\n        type: 'PLAYER_UPDATE',\n        player: player\n      });\n      addEventListeners();\n      return function () {\n        if (hls != null) {\n          hls.destroy();\n        }\n\n        removeEventListeners();\n      };\n    } else if (player !== null && player !== void 0 && player.canPlayType('application/vnd.apple.mpegurl')) {\n      // we have to branch on ios because it plays hls natively\n      // and requires a different approach ðŸ˜­\n      player.src = videoOptions.url;\n      setReady(true);\n      addEventListeners();\n      return function () {\n        removeEventListeners();\n      };\n    }\n  }, [videoOptions, videoNode, dispatch, onPlayerProgress]);\n  var Video = React.useCallback(function (_ref) {\n    var children = _ref.children,\n        props = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return /*#__PURE__*/_jsxDEV(\"video\", _objectSpread(_objectSpread({\n      ref: videoNode,\n      crossOrigin: \"anonymous\"\n    }, props), {}, {\n      children: children\n    }), changedKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, _this);\n  }, [changedKey]);\n  return {\n    Video: Video,\n    ready: ready,\n    player: videoNode.current\n  };\n};\n\n_s(useVideo, \"RguzpzNxQLxuY+0sR7y863o4E5A=\", false, function () {\n  return [usePlayerStore];\n});","map":{"version":3,"sources":["/Users/joel/Code/joelhooks/cueplayer-react/src/components/player.tsx"],"names":["React","Hls","create","devtools","reducer","state","action","type","currentCaption","text","currentTime","player","duration","usePlayerStore","set","dispatch","args","useVideo","videoOptions","videoNode","useRef","useState","ready","setReady","changedKey","JSON","stringify","useCallback","onPlayerProgress","e","target","useEffect","current","hlsConfig","enableWorker","initPlayer","video","hls","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","url","MANIFEST_PARSED","event","data","console","log","levels","length","ERROR","fatal","ErrorTypes","NETWORK_ERROR","startLoad","MEDIA_ERROR","recoverMediaError","onDurationChange","onMetadataLoaded","textTracks","tracks","i","L","textTrack","kind","cues","index","cue","onenter","mode","addEventListeners","addEventListener","removeEventListeners","removeEventListener","isSupported","destroy","canPlayType","src","Video","children","props"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport Hls from 'hls.js'\nimport create from 'zustand'\nimport {devtools} from 'zustand/middleware'\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case 'SET_CAPTION':\n      return {...state, currentCaption: action.text}\n    case 'TIME_CHANGE':\n      return {...state, currentTime: action.currentTime}\n    case 'PLAYER_UPDATE':\n      return {...state, player: action.player}\n    case 'SET_DURATION':\n      return {...state, duration: action.duration}\n  }\n}\n\nexport const usePlayerStore = create(\n  devtools((set) => ({\n    player: null,\n    currentTime: 0,\n    duration: 0,\n    currentCaption: ' ',\n    dispatch: (args: any) => set((state: any) => reducer(state, args)),\n  })),\n)\n\nexport const useVideo = (videoOptions: any) => {\n  const videoNode = React.useRef<HTMLMediaElement>()\n  const [ready, setReady] = React.useState(false)\n  const changedKey = JSON.stringify(videoOptions)\n\n  const dispatch: any = usePlayerStore(\n    React.useCallback((state) => state.dispatch, []),\n  )\n\n  const onPlayerProgress = React.useCallback(\n    (e: any) => {\n      const player = e.target as HTMLMediaElement\n      dispatch({type: 'TIME_CHANGE', currentTime: player.currentTime})\n    },\n    [dispatch],\n  )\n\n  React.useEffect(() => {\n    const player: any = videoNode.current\n    const hlsConfig = {enableWorker: true}\n\n    function initPlayer(video: HTMLMediaElement) {\n      const hls = new Hls({\n        ...hlsConfig,\n      })\n\n      hls.attachMedia(video)\n      hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(videoOptions.url)\n        hls.on(Hls.Events.MANIFEST_PARSED, function (event:any, data:any) {\n          console.log(\n            'manifest loaded, found ' + data.levels.length + ' quality level',\n            data.levels,\n          )\n\n          setReady(true)\n        })\n      })\n\n      hls.on(Hls.Events.ERROR, function (event:any, data:any) {\n        if (data.fatal) {\n          switch (data.type) {\n            case Hls.ErrorTypes.NETWORK_ERROR:\n              hls.startLoad()\n              break\n            case Hls.ErrorTypes.MEDIA_ERROR:\n              hls.recoverMediaError()\n              break\n            default:\n              initPlayer(video)\n              break\n          }\n        }\n      })\n\n      return hls\n    }\n\n    function onDurationChange() {\n      dispatch({type: 'SET_DURATION', duration: player?.duration || 0})\n    }\n\n    function onMetadataLoaded() {\n      console.log('METADATA LOADED')\n      console.log(player.textTracks)\n\n      const tracks = player.textTracks\n\n      for (var i = 0, L = tracks.length; i < L; i++) {\n        const textTrack = tracks[i]\n        console.log(textTrack)\n        if(textTrack.kind === 'subtitles') {\n          const cues = textTrack.cues\n          for (let index = 0; index < cues.length; index++) {\n            var cue = cues[index]\n            console.log(cue)\n            cue.onenter = (e: any) => {\n              const cue = e.target\n              console.log(cue)\n              dispatch({type: 'SET_CAPTION', text: cue.text})\n            }\n            // cue.onexit = cueExit\n          }\n          textTrack.mode = 'showing'\n        }\n\n      }\n    }\n\n    function addEventListeners() {\n      player?.addEventListener('timeupdate', onPlayerProgress)\n      player?.addEventListener('durationchange', onDurationChange)\n      player?.addEventListener('loadedmetadata', onMetadataLoaded)\n    }\n\n    function removeEventListeners() {\n      player?.removeEventListener('timeupdate', onPlayerProgress)\n      player?.removeEventListener('durationchange', onDurationChange)\n      player?.removeEventListener('loadedmetadata', onMetadataLoaded)\n    }\n\n    if (Hls.isSupported()) {\n      const hls = player && initPlayer(player)\n      dispatch({type: 'PLAYER_UPDATE', player})\n      addEventListeners()\n\n      return () => {\n        if (hls != null) {\n          hls.destroy()\n        }\n        removeEventListeners()\n      }\n    } else if (player?.canPlayType('application/vnd.apple.mpegurl')) {\n      // we have to branch on ios because it plays hls natively\n      // and requires a different approach ðŸ˜­\n      player.src = videoOptions.url\n      setReady(true)\n      addEventListeners()\n\n      return () => {\n        removeEventListeners()\n      }\n    }\n  }, [videoOptions, videoNode, dispatch, onPlayerProgress])\n\n  const Video = React.useCallback(\n    ({children, ...props}) => {\n      return (\n        <video\n          key={changedKey}\n          ref={videoNode}\n          crossOrigin=\"anonymous\"\n          {...props}\n        >\n          {children}\n        </video>\n      )\n    },\n    [changedKey],\n  )\n  return {Video, ready, player: videoNode.current}\n}\n"]},"metadata":{},"sourceType":"module"}